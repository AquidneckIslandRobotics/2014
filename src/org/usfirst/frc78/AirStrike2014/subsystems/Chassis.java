// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
/**@author Tyler Fleig
 */
package org.usfirst.frc78.AirStrike2014.subsystems;
import org.usfirst.frc78.AirStrike2014.RobotMap;
import org.usfirst.frc78.AirStrike2014.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc78.AirStrike2014.Robot;
/**
 *
 */
public class Chassis extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftFriveFront = RobotMap.chassisLeftFriveFront;
    SpeedController leftDriveRear = RobotMap.chassisLeftDriveRear;
    SpeedController rightDriveFromt = RobotMap.chassisRightDriveFromt;
    SpeedController rightDriveRear = RobotMap.chassisRightDriveRear;
    RobotDrive robotDrive41 = RobotMap.chassisRobotDrive41;
    DigitalOutput brake1 = RobotMap.chassisBrake1;
    DigitalOutput brake2 = RobotMap.chassisBrake2;
    DigitalOutput brake3 = RobotMap.chassisBrake3;
    DigitalOutput brake4 = RobotMap.chassisBrake4;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DriveWithJoysticks());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void driveWithJoysticks(){//default command
        Robot.chassis.robotDrive41.tankDrive(Robot.oi.driverStick.getY(),Robot.oi.driverStick.getThrottle());
    }
    public void stop(){
         Robot.chassis.robotDrive41.tankDrive(0,0);
    }
    public void brakeOn(){
        brake1.set(false);
        brake2.set(false);
        brake3.set(false);
        brake4.set(false);
    }
    public void brakeOff(){
        brake1.set(true);
        brake2.set(true);
        brake3.set(true);
        brake4.set(true);
    }
    public void driveStraightAtSpeed(double speed){
        robotDrive41.tankDrive(speed,speed);
    }
}
